name: Deploy App 

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::730335489670:role/EC2_Power_Role
          role-session-name: GitHubActions
          aws-region: us-west-2
          audience: sts.amazonaws.com  

      - name: Set Image Tag
        run: echo "IMAGE_TAG=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com

      - name: Build and Push Docker Image to ECR
        run: |
          docker build -t flask-app .
          docker tag flask-app:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Deploy Container Image to AWS Lambda
        run: |
          aws lambda update-function-code \
            --function-name ${{ vars.LAMBDA_FUNCTION_NAME }} \
            --image-uri ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Enable Lambda Function URL
        run: |
          aws lambda create-function-url-config \
            --function-name ${{ vars.LAMBDA_FUNCTION_NAME }} \
            --auth-type NONE || echo "Function URL already exists, skipping."

      - name: Ensure Public Access to Lambda Function URL
        run: |
          aws lambda add-permission \
            --function-name ${{ vars.LAMBDA_FUNCTION_NAME }} \
            --action lambda:InvokeFunctionUrl \
            --principal "*" \
            --function-url-auth-type NONE \
            --statement-id AllowPublicAccess || echo "Permission already exists, skipping."

      - name: Retrieve Lambda Function URL
        run: |
          FUNCTION_URL=$(aws lambda get-function-url-config --function-name ${{ vars.LAMBDA_FUNCTION_NAME }} --query FunctionUrl --output text)
          echo "Lambda Function URL: $FUNCTION_URL"
